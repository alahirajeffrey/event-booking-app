// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) 
  email       String    @unique
  password    String
  isVerified  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  refreshToken  String?   
  events      Event[]
  bookings    Booking[]
  otp         Otp?
}

model Event {
  id          String    @id @default(uuid()) 
  title       String
  description String
  date        DateTime
  location    String
  seatPrice   Decimal   @default(0.00)
  organizer   User      @relation(fields: [organizerId], references: [id])
  organizerId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  review      String?

  bookings    Booking[]
  reviews     Review[]
}

model Review {
  id          String    @id @default(uuid())
  review      String
  event       Event     @relation(fields: [eventId], references: [id])
  eventId     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

}

// model Payment {
//   id         String    @id @default(uuid()) 
//   amount     Float
//   status     String
//   createdAt  DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt
//   user       User      @relation(fields: [userId], references: [id])
//   userId     String
//   booking    Booking   @relation(fields: [bookingId], references: [id])
//   bookingId  String
// }

model Booking {
  id         String    @id @default(uuid())
  event      Event     @relation(fields: [eventId], references: [id])
  eventId    String
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  // payment    Payment?
}

model Otp{
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  otp       String
  createdAt  DateTime  @default(now())
}